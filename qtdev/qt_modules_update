#!/bin/bash

function update
{
    git fetch --all
    git checkout $branch

    remote=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
    remote=${remote%%"/"*}
    [[ -z $remote ]] && remote="origin"

    stashsha=$(git stash create /dev/null)
    if [ ! -z $stashsha ]
    then
      git stash store $stashsha -m "From $0"
      git reset --hard
    fi

    git rebase $remote/$branch

    if [ ! -z $stashsha ]
    then
      git stash pop
    fi
}

if [ -f .git_worktree ]
then
  echo "Updating toplevel project"
  pwd
  mv .git_worktree .git
  branch=$(git branch --show-current --no-color)
  update
  mv .git .git_worktree
  echo "Toplevel project updated"
elif [ -f .git ]
then
  branch=$(git branch --show-current --no-color)
else
  branch=$(basename $PWD)
fi

[[ -z $branch ]] && echo "Can't determine branch"

echo "Updating $branch"

for subproject in */
do
  [[ "$(ls -A ${subproject})" ]] || rm -r "${subproject}"
done

superrepo=""

for subproject in */
do
    [ ! -f "${subproject}.git" ] && continue
    subproject=$(basename $subproject)

    echo "Updating $subproject"
    cd $subproject

    if [ -z $superrepo ]
    then
      superrepo=$(git rev-parse --git-dir)
      superrepo="${superrepo%\.git*}"
      superrepo="${superrepo%$subproject*}"
    fi

    update
    git submodule update

    echo "$subproject Updated"
    cd ..
done
