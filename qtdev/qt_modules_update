#!/bin/bash

branch=$(basename $PWD)

superrepo=""

function update
{
    git fetch
    git checkout $branch

    stashsha=$(git stash create /dev/null)
    if [ ! -z $stashsha ]
    then
      git stash store $stashsha -m "From $0"
      git reset --hard
    fi

    git rebase origin/$branch

    if [ ! -z $stashsha ]
    then
      git stash pop
    fi
}

for subproject in */
do
    [ ! -f "${subproject}.git" ] && continue
    subproject=$(basename $subproject)

    echo "Updating $subproject"
    cd $subproject

    if [ -z $superrepo ]
    then
      superrepo=$(git rev-parse --git-dir)
      superrepo="${superrepo%\.git*}"
      superrepo="${superrepo%$subproject*}"
    fi

    update
    git submodule update

    echo "$subproject Updated"
    cd ..
done

if [ -f .git_worktree ]
then
  echo "Updating toplevel project"
  pwd
  mv .git_worktree .git
  update
  mv .git .git_worktree
  echo "Toplevel project updated"
elif [ ! -z $superrepo ]
then
  cd $superrepo
  update
  cd -
  echo "Synchronizing toplevel build files from $superrepo to $PWD"
  ln -f ${superrepo}cmake/* cmake
  ln -f ${superrepo}CMakeLists.txt .
  ln -f ${superrepo}configure* .
  ln -f ${superrepo}_clang-format .
fi

for subproject in */
do
  [[ "$(ls -A ${subproject})" ]] || rm -r "${subproject}"
done
